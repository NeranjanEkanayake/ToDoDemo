
@{
    ViewBag.Title = "Index";
}
@model IEnumerable<ToDoApp.Models.ToDoModel>

<div class="container">
    <div class="row">
        <!--Add new todos-->
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Add new todo</h5>
                    <input type="text" id="newTitle" class="form-control mb-2" placeholder="Title" />
                    <textarea id="newDescription" class="form-control mb-2" placeholder="Description"></textarea>
                    <button class="btn btn-primary" onclick="addTodo()">Add</button>
                </div>
            </div>
        </div>

        @foreach (var todo in Model)
        {
            <div class="col-md-4">
                <div class="card" id="todoCard-@todo.Id">
                    <div class="card-body">
                        <!--Viewing todos-->
                        <div id="viewMode-@todo.Id">
                            <h5 class="card-title">@todo.Title</h5>
                            <p class="card-text">@todo.Description</p>
                            <p class="card-text">@todo.CreatedBy</p>
                            <p class="card-text">@todo.CreatedDate</p>
                            <button class="btn btn-warning btn-sm" onclick="toggleEditMode(@todo.Id)">Edit</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteTodo(@todo.Id)">Delete</button>
                            <span class="badge @(todo.Status ? "bg-success" : "bg-warning")">
                                @(todo.Status ? "Completed":"Pending")
                            </span>
                        </div>
                        <!--Editing todos-->
                        <div id="editMode-@todo.Id" style="display:none;">
                            <input type="text" id="editTitle-@todo.Id" class="form-control mb-2" value="@todo.Title"/>
                            <textarea id="editDescription-@todo.Id" class="form-control mb-2">@todo.Description</textarea>
                            <button class="btn btn-success btn-sm" onclick="saveTodo(@todo.Id)">Save</button>
                            <button class="btn btn-secondary btn-sm" onclick="cancelEdit(@todo.Id)">Cancel</button>
                            <p class="card-text">@todo.CreatedBy</p>
                            <p class="card-text">@todo.CreatedDate</p>
                            <span class="badge @(todo.Status ? "bg-success" : "bg-warning")">
                                @(todo.Status ? "Completed":"Pending")
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<script>
    function toggleEditMode(id) {
        document.getElementById("viewMode-" + id).style.display = "none";
        document.getElementById("editMode-" + id).style.display = "block";
    }

    function cancelEdit(id) {
        document.getElementById("viewMode-" + id).style.display = "block";
        document.getElementById("editMode-" + id).style.display = "none";
    }

    //adding new todos
    function addTodo() {
        var title = document.getElementById("newTitle").value;
        var description = document.getElementById("newDescription").value;

        fetch('/Todo/Create', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ Title: title, Description: description })
        }).then(respone => response.json())
            .then(data => location.reload())
            .catch(error => console.error('Error:', error));
        console.log("ToDo added: ", title, description);

        document.getElementById("newTitle").value = "";
        document.getElementById("newDescription").value = "";

    }

    function saveToDo(id) {
        var title = document.getElementById("editTitle-" + id).value;
        var description = document.getElementById("editDescription-" + id).value;

        fetch('/ToDo/Edit/' + id, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ Id: id, Title: title, Description: description })
        }).then(respone => response.json())
            .then(data => location.reload())
            .catch(error => console.error('Error:', error));
        console.log("Edited todo: ", title, description);
    }

    function deleteToDo(id) {
        if (confirm("Are you sure you want to delete this ToDo?")) {
            fetch('/ToDo/Delete/' + id, { method: 'DELETE' })
                .then(response => response.json())
                .then(data => location.reload()) // Reload to remove deleted ToDo
                .catch(error => console.error('Error:', error));
        }
    }

</script>

